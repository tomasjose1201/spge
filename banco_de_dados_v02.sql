-- MySQL Script generated by MySQL Workbench
-- Wed Apr  4 15:19:52 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema spge
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema spge
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `spge` DEFAULT CHARACTER SET utf8 ;
USE `spge` ;

-- -----------------------------------------------------
-- Table `spge`.`EVENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`EVENTO` (
  `idEvento` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NULL,
  `descricao` TEXT NULL,
  `dataHoraInicio` DATETIME NULL,
  `dataHoraEncerramento` DATETIME NULL,
  `dataHoraEncerramentoInscricoes` DATETIME NULL,
  `endereco` VARCHAR(255) NULL,
  `numMaxParticipantes` INT NULL,
  `emiteCertificado` CHAR(1) NULL,
  `contemSecoes` CHAR(1) NULL,
  `tipoEvento` CHAR(2) NULL,
  `preco` DECIMAL NULL,
  `fotoDestaque` VARCHAR(255) NULL,
  `urlWebsite` TEXT NULL,
  `urlEventoFacebook` TEXT NULL,
  PRIMARY KEY (`idEvento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`SECAO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`SECAO` (
  `idSecao` INT NOT NULL AUTO_INCREMENT,
  `idEvento` INT NOT NULL,
  `nome` VARCHAR(255) NULL,
  `dataHoraInicio` DATETIME NULL,
  `dataHoraEncerramento` DATETIME NULL,
  `dataHotaEncerramentoInscricoes` DATETIME NULL,
  `descricao` TEXT NULL,
  PRIMARY KEY (`idSecao`, `idEvento`),
  INDEX `fk_SECAO_EVENTO1_idx` (`idEvento` ASC),
  CONSTRAINT `fk_SECAO_EVENTO1`
    FOREIGN KEY (`idEvento`)
    REFERENCES `spge`.`EVENTO` (`idEvento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`USUARIO` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NULL,
  `cpf` VARCHAR(20) NULL,
  `rg` VARCHAR(20) NULL,
  `endereco` VARCHAR(255) NULL,
  `telefone` VARCHAR(20) NULL,
  `email` VARCHAR(100) NULL,
  `senha` VARCHAR(20) NULL,
  `estudante` CHAR(1) NULL,
  `numMatricula` VARCHAR(50) NULL,
  `curso` VARCHAR(100) NULL,
  `instituicao` VARCHAR(100) NULL,
  PRIMARY KEY (`idUsuario`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`USUARIO_PERFIL_EVENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`USUARIO_PERFIL_EVENTO` (
  `idUsuario` INT NOT NULL,
  `idEvento` INT NOT NULL,
  `perfil` CHAR(1) NULL,
  PRIMARY KEY (`idUsuario`, `idEvento`),
  INDEX `fk_USUARIO_has_EVENTO_EVENTO1_idx` (`idEvento` ASC),
  INDEX `fk_USUARIO_has_EVENTO_USUARIO_idx` (`idUsuario` ASC),
  CONSTRAINT `fk_USUARIO_has_EVENTO_USUARIO`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `spge`.`USUARIO` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USUARIO_has_EVENTO_EVENTO1`
    FOREIGN KEY (`idEvento`)
    REFERENCES `spge`.`EVENTO` (`idEvento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`CONVIDADO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`CONVIDADO` (
  `idConvidado` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NULL,
  `cpf` VARCHAR(20) NULL,
  `email` VARCHAR(100) NULL,
  `tipoConvidado` CHAR(2) NULL,
  `idUsuario` INT NOT NULL,
  PRIMARY KEY (`idConvidado`),
  INDEX `fk_CONVIDADO_USUARIO1_idx` (`idUsuario` ASC),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  CONSTRAINT `fk_CONVIDADO_USUARIO1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `spge`.`USUARIO` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`CONVIDADO_EVENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`CONVIDADO_EVENTO` (
  `idEvento` INT NOT NULL,
  `idConvidado` INT NOT NULL,
  `statusRequisicaoParticipacao` CHAR(1) NULL,
  `contatoRealizado` CHAR(1) NULL,
  `statusConfirmacaoParticipacao` CHAR(1) NULL,
  `dataHoraConfirmacao` DATETIME NULL,
  PRIMARY KEY (`idEvento`, `idConvidado`),
  INDEX `fk_CONVIDADO_SECAO_CONVIDADO1_idx` (`idConvidado` ASC),
  INDEX `fk_CONVIDADO_SECAO_EVENTO1_idx` (`idEvento` ASC),
  CONSTRAINT `fk_CONVIDADO_SECAO_CONVIDADO1`
    FOREIGN KEY (`idConvidado`)
    REFERENCES `spge`.`CONVIDADO` (`idConvidado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CONVIDADO_SECAO_EVENTO1`
    FOREIGN KEY (`idEvento`)
    REFERENCES `spge`.`EVENTO` (`idEvento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`CONVIDADO_SECAO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`CONVIDADO_SECAO` (
  `idSecao` INT NOT NULL,
  `idEvento` INT NOT NULL,
  `idConvidado` INT NOT NULL,
  `contatoRealizado` CHAR(1) NULL,
  `statusConfirmacaoParticipacao` CHAR(1) NULL,
  `dataHoraConfirmacao` DATETIME NULL,
  PRIMARY KEY (`idSecao`, `idEvento`, `idConvidado`),
  INDEX `fk_CONVIDADO_SECAO_SECAO1_idx` (`idSecao` ASC, `idEvento` ASC),
  INDEX `fk_CONVIDADO_SECAO_CONVIDADO2_idx` (`idConvidado` ASC),
  CONSTRAINT `fk_CONVIDADO_SECAO_SECAO1`
    FOREIGN KEY (`idSecao` , `idEvento`)
    REFERENCES `spge`.`SECAO` (`idSecao` , `idEvento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CONVIDADO_SECAO_CONVIDADO2`
    FOREIGN KEY (`idConvidado`)
    REFERENCES `spge`.`CONVIDADO` (`idConvidado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`AREA_INTERESSE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`AREA_INTERESSE` (
  `idAreaInteresse` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(50) NULL,
  PRIMARY KEY (`idAreaInteresse`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`USUARIO_AREA_INTERESSE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`USUARIO_AREA_INTERESSE` (
  `idUsuario` INT NOT NULL,
  `idAreaInteresse` INT NOT NULL,
  PRIMARY KEY (`idUsuario`, `idAreaInteresse`),
  INDEX `fk_USUARIO_AREAS_INTERESSE_USUARIO1_idx` (`idUsuario` ASC),
  INDEX `fk_USUARIO_AREAS_INTERESSE_AREAS_INTERESSE1_idx` (`idAreaInteresse` ASC),
  CONSTRAINT `fk_USUARIO_AREAS_INTERESSE_USUARIO1`
    FOREIGN KEY (`idUsuario`)
    REFERENCES `spge`.`USUARIO` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USUARIO_AREAS_INTERESSE_AREAS_INTERESSE1`
    FOREIGN KEY (`idAreaInteresse`)
    REFERENCES `spge`.`AREA_INTERESSE` (`idAreaInteresse`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spge`.`FOTO_EVENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spge`.`FOTO_EVENTO` (
  `idFotoEvento` INT NOT NULL AUTO_INCREMENT,
  `idEvento` INT NOT NULL,
  `descricao` VARCHAR(255) NULL,
  `foto` VARCHAR(255) NULL,
  PRIMARY KEY (`idFotoEvento`, `idEvento`),
  INDEX `fk_FOTOS_EVENTOS_EVENTO1_idx` (`idEvento` ASC),
  CONSTRAINT `fk_FOTOS_EVENTOS_EVENTO1`
    FOREIGN KEY (`idEvento`)
    REFERENCES `spge`.`EVENTO` (`idEvento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
